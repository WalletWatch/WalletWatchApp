version: '3'
services:
  psql:
    container_name: db_dev
    image: postgres
    environment:
      - POSTGRES_DB=${PSQL_NAME}
      - POSTGRES_USER=${PSQL_USER}
      - POSTGRES_PASSWORD=${PSQL_PASSWORD}
  redis:
    image: redis:latest
  api-dev:
    container_name: api_dev
    build: ./backend
    env_file: .env.dev
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/backend
    depends_on:
      - psql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.walletwatch-api.rule=Host(`271b83d7f474.vps.myjino.ru`) && PathPrefix(`/walletwatch/dev/api/`)"
      # - "traefik.http.services.walletwatch-api.loadbalancer.server.port=8000"
      - "traefik.http.routers.walletwatch-api.tls=true"
      - "traefik.http.routers.walletwatch-api.tls.certresolver=letsencrypt"
    expose:  # new
      - 8000
  celery:
    container_name: celery_dev
    build: ./backend
    command: celery -A project worker --loglevel=info --beat
    volumes:
      - ./backend:/backend
    depends_on:
      - psql
      - redis
  app:
    container_name: react_app_dev
    restart: on-failure
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/src:/frontend/src
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.walletwatch.rule=Host(`271b83d7f474.vps.myjino.ru`) && PathPrefix(`/walletwatch/dev/app/`)"
      - "traefik.http.routers.walletwatch.entrypoints=web-secure"
      - "traefik.http.services.app.loadbalancer.server.port=3000"
    ports:
      - "3000:3000"
    command: >
      sh -c "npm start"
    env_file:
      - .env.dev
  traefik:
    container_name: traefik_dev
    image: traefik:v2.4
    build:
      context: .
      dockerfile: Dockerfile.traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/etc/traefik/traefik.toml
      - ./letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`271b83d7f474.vps.myjino.ru`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=testuser:$$apr1$$jIKW.bdS$$eKXe4Lxjgy/rH65wP1iQe1"
volumes:
  letsencrypt:
  traefik-public-certificates:
networks:
  registry_default:
    external: true


# docker-compose up --scale celery=3