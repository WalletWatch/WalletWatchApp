version: '3'
services:
  psql:
    container_name: db_dev
    image: postgres
    environment:
      - POSTGRES_DB=${PSQL_NAME}
      - POSTGRES_USER=${PSQL_USER}
      - POSTGRES_PASSWORD=${PSQL_PASSWORD}
  redis:
    image: redis:latest
    container_name: wallet_watch_app-redis
  api-dev:
    container_name: api_dev
    build: ./backend
    env_file: .env.dev
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/backend
    depends_on:
      - psql
      - redis
    ports: [8000]
    environment:
      - REDIS_HOST=wallet_watch_app-redis  # Указываем имя контейнера Redis
  celery:
    container_name: celery_dev
    build: ./backend
    command: celery -A project worker --loglevel=info --beat
    volumes:
      - ./backend:/backend
    depends_on:
      - psql
      - redis
    ports: [8000]
    environment:
    - REDIS_HOST=wallet_watch_app-redis
  app:
    container_name: react_app_dev
    restart: on-failure
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend/src:/frontend/src
    ports: [3000]
    command: >
      sh -c "npm start"
    env_file:
      - .env.dev
  traefik:
    container_name: traefik
    image: traefik:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "./traefik.toml:/etc/traefik/traefik.toml"

networks:
  default:
    external: 
      name: traefik
