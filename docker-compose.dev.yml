version: '3.8'

services:
  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"  # Добавьте эту строку для использования Let's Encrypt
      - "--certificatesresolvers.myresolver.acme.email=e.gryumova@gmail.com"  # Замените на вашу электронную почту для Let's Encrypt
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"  # Замените на путь для сохранения сертификатов
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
  psql:
    container_name: psql
    image: postgres
    environment:
      - POSTGRES_DB=${PSQL_NAME}
      - POSTGRES_USER=${PSQL_USER}
      - POSTGRES_PASSWORD=${PSQL_PASSWORD}
  redis:
    image: redis:latest
    container_name: wallet_watch_app-redis
  celery:
    container_name: celery_dev
    build: ./backend
    command: celery -A project worker --loglevel=info --beat
    volumes:
      - ./backend:/backend
    depends_on:
      - psql
      - redis
      - django
    expose:
      - "8001"
    environment:
      - REDIS_HOST=wallet_watch_app-redis
  django:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env.dev
    volumes:
      - ./backend:/backend
    command: bash -c "python manage.py clear_cache && python manage.py migrate && daphne -b 0.0.0.0 -p 8000 project.asgi:application"
    depends_on:
      - traefik
      - psql 
      - redis
    environment:
      - REDIS_HOST=wallet_watch_app-redis  # Указываем имя контейнера Redis
    expose:
      - "8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`dev.api.c0d2aa9fd631.vps.myjino.ru` ) || Host(`dev.api.gryumova.ru`) && PathPrefix(`/api`)" # Ваш домен
      - "traefik.http.services.django.loadbalancer.server.port=8000"
      # Маршрут для WebSocket
      - "traefik.http.routers.django-ws.rule=Host(`dev.api.c0d2aa9fd631.vps.myjino.ru`) && PathPrefix(`/ws`)"
      - "traefik.http.routers.django-ws.service=django"
      - "traefik.http.services.django.loadbalancer.server.port=8000"
  react:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file: .env.dev 
    volumes:
      - ./frontend/src:/frontend/src
    command: sh -c "npm start"
    depends_on:
      - traefik
    expose:
      - "3000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.react.rule=Host(`dev.app.c0d2aa9fd631.vps.myjino.ru`) || Host(`dev.app.gryumova.ru`)" # Ваш домен
      - "traefik.http.services.react.loadbalancer.server.port=3000"

networks:
  web:
    external: true
