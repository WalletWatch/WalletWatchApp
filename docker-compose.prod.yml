version: '3.8'

services:
  psql:
    container_name: db_dev
    image: postgres
    environment:
      - POSTGRES_DB=${PSQL_NAME}
      - POSTGRES_USER=${PSQL_USER}
      - POSTGRES_PASSWORD=${PSQL_PASSWORD}
  redis:
    image: redis:latest
    container_name: wallet_watch_app-redis
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    env_file: .env.dev
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    expose:
      - 8000
    environment:
      - REDIS_HOST=wallet_watch_app-redis  # Указываем имя контейнера Redis
    depends_on:
      - psql
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`django-traefik.gryumova.ru`)"
      - "traefik.http.routers.django.tls=true"
      - "traefik.http.routers.django.tls.certresolver=letsencrypt"
  traefik:
    build:
      context: .
      dockerfile: Dockerfile.traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-public-certificates:/certificates"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard-django-traefik.gryumova.ru`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=testuser:$$apr1$$jIKW.bdS$$eKXe4Lxjgy/rH65wP1iQe1"

volumes:
  traefik-public-certificates: